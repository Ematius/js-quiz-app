generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model favorite {
  user_id     Int
  question_id Int
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "favorite_ibfk_1")
  question    question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "favorite_ibfk_2")

  @@id([user_id, question_id])
  @@index([question_id], map: "question_id")
}

model question {
  id            Int                  @id @default(autoincrement())
  question      String               @db.Text
  answer        String               @db.VarChar(255)
  level         question_level
  method        String               @db.VarChar(100)
  method_type   question_method_type
  mode_answer   question_mode_answer
  explanation   String?              @db.Text
  favorite      favorite[]
  user          user[]
  user_progress user_progress[]
}

model user {
  id               Int             @id @default(autoincrement())
  acc              String          @unique(map: "acc") @db.VarChar(50)
  pass             String          @db.VarChar(255)
  email            String          @unique(map: "email") @db.VarChar(255)
  last_question_id Int?
  favorite         favorite[]
  question         question?       @relation(fields: [last_question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  user_progress    user_progress[]

  @@index([last_question_id], map: "last_question_id")
}

model user_progress {
  id          Int      @id @default(autoincrement())
  user_id     Int
  question_id Int
  is_correct  Boolean
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_progress_ibfk_1")
  question    question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_progress_ibfk_2")

  @@unique([user_id, question_id], map: "unique_user_question")
  @@index([question_id], map: "question_id")
}

enum question_level {
  junior
  senior
  guru
}

enum question_method_type {
  array
  string
}

enum question_mode_answer {
  teorica
  practica
}
